name: Java CI with Gradle

on:
  push:
    branches: [ "BE-26-이미지-업로드" ]
  pull_request:
    branches: [ "BE-26-이미지-업로드" ]

permissions:
  contents: read

env:
  DB_HOST: ${{secrets.DB_HOST}}
  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
  DB_USER: ${{secrets.DB_USER}}
  DB_NAME: ${{secrets.DB_NAME}}


jobs:
  build:

    runs-on: ubuntu-latest


    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Run chmod to make deploy.sh executable
        run: chmod +x ./scripts/deploy.sh

      - name: create env file
        run: |
          echo "export DB_HOST=${{secrets.DB_HOST}}" >> ./env
          echo "export DB_USER=${{secrets.DB_USER}}" >> ./env
          echo "export DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> ./env
          echo "export DB_NAME=${{secrets.DB_NAME}}" >> ./env

      - name: Build with Gradle
        run: |
          ./gradlew build -x test \
            -DDB_HOST=${{secrets.DB_HOST}} \
            -DDB_USER=${{secrets.DB_USER}} \
            -DDB_PASSWORD=${{secrets.DB_PASSWORD}} \
            -DDB_NAME=${{secrets.DB_NAME}}
        shell: bash


      - name: Package Spring Boot application
        run: |
          mkdir -p deploy
          mkdir -p content
          cp build/libs/*.jar deploy/application.jar

      # zip으로 압축
      # 현재 directory를 현재 경로에 build.zip 이름으로 압축
      # -r 하위경로까지 모두다라는 옵션
      - name: Compress the result into zip file
        run: zip -r ./build.zip .
        shell: bash

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # Upload to S3 stroage
      - name: Upload to S3
        run: aws s3 cp build.zip s3://${{ secrets.BUCKET_NAME }}/deploy/build.zip --region ap-northeast-2

      - name: Deploy with AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APP_NAME }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DG_NAME }} \
            --s3-location bucket=${{ secrets.BUCKET_NAME }},key=deploy/build.zip,bundleType=zip
